spring:
  ai:
    zhipuai:
      # https://open.bigmodel.cn/usercenter/proj-mgmt/apikeys
      # api-key 使用你自己申请的进行替换；如果为了安全考虑，可以通过启动参数进行设置
      api-key: ${zhipuai-api-key}
      chat:
        options:
          model: GLM-4-Flash
    spark:
      # https://console.xfyun.cn/services/cbm
      # api-key 使用你自己申请的进行替换；如果为了安全考虑，可以通过启动参数进行设置
      base-url: https://spark-api-open.xf-yun.com/v1/chat/completions
      api-key: ${spark-api-key}
      chat:
        options:
          model: lite
    mcp:
      client:
        #  使用本地的mcp server，通过进程通信，我们这里演示的是使用 selenium 来实现网页数据抓取
        stdio:
          servers-configuration: classpath:mcp-servers.json
        # 如果想要体验 MCP Server，请将下面的 false 改成 true
        enabled: false
        name: 校招派MCP
        version: 1.0.0
        request-timeout: 30s
        # 注意，这里使用的是异步，因此代码中获取的也应该是异步的 McpAsyncClient
        type: async


logging:
  level:
    org.springframework.ai.chat.client.advisor.SimpleLoggerAdvisor: debug
    com.git.hui.offer.gather.service.GatherAiAgent: debug  # 开发时，输出debug调试日志，用于显示与大模型交互的输入/返回